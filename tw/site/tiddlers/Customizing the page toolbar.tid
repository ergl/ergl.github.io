description: A step-by-step guide to customizing your sidebar buttons
tags: tiddlywiki
title: Customizing the page toolbar
type: text/vnd.tiddlywiki

!! Quick guide

* Create a new tiddler, with title `$:/<username>/functions/<action-name>` (the name is mostly meaningless, but this will namespace the tiddle).

* Tag it with `$:/tags/PageControls`. This tells tiddlywiki to add it to the Page Controls. Other useful tags can be seen in [[this list|About the core tags]].

* The body of the tiddler will be whatever is rendered on the page control.

!! An Example

This example from  $:/ergl/functions/NewBookmarkLink will:

# Create a button, that when clicking it will
# Create a new tiddler with the given arguments (title, tags, text), plus a custom field `bookmark_link`.
# Customize the button contents when the `<tv-config-toolbar-icons>` or `<tv-config-toolbar-text>` settings are set to `yes`.

```
<$button
    tooltip="Create a new Link tiddler"
    class=<<tv-config-toolbar-class>> >

    <$action-sendmessage
        $message="tm-new-tiddler"
        title="Link Title"
        tags="link-note"
        bookmark_link="The URL of the link"
        text="Type a few words about the link" />

    <$list filter="[<tv-config-toolbar-icons>prefix[yes]]">
        {{$:/core/images/import-button}}
    </$list>

    <$list filter="[<tv-config-toolbar-text>prefix[yes]]">
        <span class="tc-btn-text"><$text text="new link tiddler"/></span>
    </$list>
</$button>
```

Let's dissect this bit by bit:

```
<$button
    tooltip="Create a new Link tiddler"
    class=<<tv-config-toolbar-class>> >
(snip)
</$button>
```

This part creates a new button with the given tooltip. The `class` attribute sets whatever style we want the button to have. The `<<tv-config-toolbar-class>>` macro resolves to the class that all toolbar buttons have (we want our button to be consistent with the rest of the system).

```
<$action-sendmessage
    $message="tm-new-tiddler"
    title="Link Title"
    tags="link-note"
    bookmark_link="The URL of the link"
    text="Type a few words about the link" />
```

This is the core logic. Buttons can have associated actions, that will execute when it is clicked. I won't delve into details about it, since the official documentation on [[buttons|https://tiddlywiki.com/static/ButtonWidget.html]] and [[actions|https://tiddlywiki.com/static/ActionSendMessageWidget.html]] is quite complete. Suffice to say that the `tm-new-tiddler` action tells tiddlywiki to create a new tiddler, and the rest of the arguments are the fields and values we want the new tiddler to have. The `bookmark_link` is a custom field I added to my link, and it's where the link url should go.

!!! Styling the button

Remember we defined the class of our button to `<<tv-config-toolbar-class>>`? We also want our button to behave as the rest of the sidebar buttons, and that means reacting when the settings of the sidebar change. In particular, we want to toggle showing the button icon, or text, depending on the settings.

Tiddlywiki doesn't have a built-in logical `if` construct (we can write macros in Javascript, which would let us use a full programming language, but that's something for other post), but we can emulate them with filtered lists, like so:

```
<$list filter="[<tv-config-toolbar-icons>prefix[yes]]">
    {{$:/core/images/import-button}}
</$list>

<$list filter="[<tv-config-toolbar-text>prefix[yes]]">
    <span class="tc-btn-text"><$text text="new link tiddler"/></span>
 </$list>
```

The first list filter will only match if the `<tv-config-toolbar-icons>` setting is set to `yes`. This means that the user wants to show the images of the button, so we [[transclude|https://tiddlywiki.com/static/Transclusion%2520in%2520WikiText.html]] the icon for our button. Speaking of icons, you can use any of the core images under the `$:/core/images/` namespace, or [[import your own|Importing images]].

The second filter will do the same for the`<tv-config-toolbar-text>` setting. This tells tiddlywiki to display the text of the button, so we embed raw html to show the text we want.

!!! Adding some custom fields

We already have a fully functioning button on the sidebar, but we can add two more things to make it more complete. We will add two extra [[fields|https://tiddlywiki.com/static/TiddlerFields.html]] to our tiddle: `caption` and `description`. Here's what our button will have:

|!Field |!Value |
|caption |`{{$:/core/images/import-button}} Create a new link tiddler` |
|description|`Create a new link tiddler` |

The `caption` is what tiddlywiki will display inside our button in the `Tools` tab of the sidebar. We transclude our icon again, and set a reasonable description. The `description` is a longer, more detailed explanation of what our button does. In my case, I wrote the same, but that's only because I'm a lazy ass.
